<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="com.example.project.dao.UserDAO">
		
		<!-- 로그인한 회원 정보 -->
   		<select id="getUserById" parameterType="UserDTO" resultType="UserDTO">
  			SELECT *
  			FROM MEMBER_DATA
  			WHERE ID=#{id}
  		</select>
  		
  		<!-- 회원가입 -->
  		<insert id="insertUser" parameterType="UserDTO">
  			INSERT INTO MEMBER_DATA(ID, PWD, NAME, EMAIL, EDUCATION, SCHOOL, EDUCATION_CODE, SCHOOL_CODE, USERGRADE, USERCLASS)
					VALUES(#{id}, #{pwd}, #{name}, #{email}, #{education}, #{school}, #{educationCode}, #{schoolCode}, #{usergrade}, #{userclass})
  		</insert>
  		
  		<!-- 회원가입 -> 아이디 중복 체크 -->
   		<select id="getId" parameterType="UserDTO" resultType="java.lang.Integer">
   			<!-- NVL함수 NULL값 처리 -->
  			SELECT NVL(COUNT(*),0) 
  			FROM MEMBER_DATA
  			WHERE ID=#{id}
  		</select>
  		
  		<!-- 회원가입 -> 아이디 중복 체크 -->
   		<select id="getEmail" parameterType="UserDTO" resultType="java.lang.Integer">
   			<!-- NVL함수 NULL값 처리 -->
  			SELECT NVL(COUNT(*),0) 
  			FROM MEMBER_DATA
  			WHERE EMAIL=#{email}
  		</select>
  		
  		<!-- 마이페이지 -> 비밀번호 중복 체크 -->
   		<select id="getpwd" parameterType="UserDTO" resultType="java.lang.Integer">
   			<!-- NVL함수 NULL값 처리 -->
  			SELECT NVL(COUNT(*),0) 
  			FROM MEMBER_DATA
  			WHERE PWD=#{pwd}
  		</select>
  		
  		
  		<!-- 회원정보 수정 -->
  		<insert id="updateUser" parameterType="UserDTO">
  		 	UPDATE MEMBER_DATA
  		 	SET NAME = #{name},
  		 		EMAIL = #{email},
  		 		EDUCATION = #{education},
  		 		SCHOOL = #{school},
  		 		EDUCATION_CODE = #{educationCode},
  		 		SCHOOL_CODE = #{schoolCode},
  		 		USERGRADE = #{usergrade},
  		 		USERCLASS = #{userclass}
  		 	WHERE ID = #{id}
  		</insert>
  		
  		<!-- 비밀번호 수정 -->
  		<insert id="updatePwd" parameterType="UserDTO">
  		 	UPDATE MEMBER_DATA
  		 	SET PWD = #{changepwd}
  		 	WHERE ID = #{id}
  		</insert>
  		
  		<!-- 회원탈퇴 -->
  		<delete id="deleteUser" parameterType="UserDTO">
  			DELETE
  			FROM MEMBER_DATA
  			WHERE ID = #{id}
  		</delete>
  		
  		
  		<!-- 이메일로 id정봅 받아오기 -->
   		<select id="findUserByUserId" parameterType="UserDTO" resultType="UserDTO">
  			SELECT *
  			FROM MEMBER_DATA
  			WHERE EMAIL=#{email}
  		</select>
  		
  		<!-- 매칭된 아이디로 비밀번호 수정 -->
  		<insert id="updateUserPassword" parameterType="UserDTO">
  		 	UPDATE MEMBER_DATA
  		 	SET PWD = #{pwd}
  		 	WHERE ID = #{id}
  		</insert>
  		
  		<!-- 암호화된 비밀번호 조회 -->
   		<select id="getEncordpwd" parameterType="UserDTO" resultType="UserDTO">
   			<!-- NVL함수 NULL값 처리 -->
  			SELECT PWD
  			FROM MEMBER_DATA
  			WHERE ID=#{id}
  		</select>
  		 
  		 <select id="userInfo" parameterType="string" resultType="SchoolInfo">
  		 	SELECT education_code as officeOfEducationCode, school_code, usergrade, userclass , education
  		 	FROM member_data
  		 	WHERE id = #{id}
  		 </select>
  		
   
  </mapper>
  
  
  
  
  
  
  
  
  
  
  